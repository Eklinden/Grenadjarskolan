---
import BaseLayout from '../layouts/BaseLayout.astro';
import {
  findCurrentWeek,
  isDateInWeek,
  menuWeeks,
  parseDate,
  sortWeeks,
  type MenuWeek
} from '../data/matsedel';

const infoCards = [
  {
    title: 'Närproducerat & ekologiskt',
    description:
      'Minst 70% av råvarorna kommer från Blekinge och Skåne. Vi samarbetar med lokala odlare för att erbjuda säsongsbaserade grönsaker, mjöl och mejeriprodukter.'
  },
  {
    title: 'Elevinflytande i matsalen',
    description:
      'Elevköket “Smakpatrullen” provlagar nya recept tillsammans med kockarna och röstar varje månad fram en favorit som får plats på menyn.'
  },
  {
    title: 'Specialkost & allergier',
    description:
      'Vårt kök är certifierat för specialkost. Hör av dig till skolsköterskan för individuella behov så planerar vi säkra alternativ i god tid.'
  }
];

const sustainabilityHighlights = [
  {
    title: 'Klimatsmarta val',
    description:
      'Varje vecka markeras de mest klimatsmarta rätterna med “Grön stjärna”. Eleverna får se hur valet påverkar klimatavtrycket.'
  },
  {
    title: 'Odling året runt',
    description:
      'I matsalens växthus odlar vi örter och sallad tillsammans med eleverna. De används direkt i dagens salladsbuffé.'
  },
  {
    title: 'Zero waste-torsdag',
    description:
      'På torsdagar väger klasserna sitt matsvinn och delar tips i skolans hållbarhetskanaler. Vinsten: en extra utelektion med rörelseglädje.'
  }
];

const kitchenQuote = {
  text:
    'Vi vill att maten ska kännas som en glädjefylld paus mitt i skoldagen. Doften av nybakat bröd möter musiklistan som eleverna själva valt.',
  author: 'Köksmästare Sofia “Sof” Lindström'
};

const today = new Date();
const sortedWeeks = sortWeeks(menuWeeks);
const currentWeek = findCurrentWeek(menuWeeks, today);
const isActiveWeek = isDateInWeek(currentWeek, today);
const currentWeekLabel = `Vecka ${currentWeek.weekNumber}`;
const weekdayFormatter = new Intl.DateTimeFormat('sv-SE', { weekday: 'long' });
const currentWeekday = weekdayFormatter.format(today);
const normalizedWeekday =
  currentWeekday.charAt(0).toUpperCase() + currentWeekday.slice(1);
const formatDate = new Intl.DateTimeFormat('sv-SE', { day: 'numeric', month: 'long' });

const isWeekCurrent = (week: MenuWeek) => week.startDate === currentWeek.startDate;
---
<BaseLayout
  title="Skolmat på Grenadjärskolan"
  description="Upptäck veckans matsedel på Grenadjärskolan – hållbar skolmat med mycket grönt, lokala råvaror och elevinflytande."
>
  <section class="page-hero" aria-labelledby="food-heading">
    <div class="container">
      <p class="eyebrow">Matsedel</p>
      <h1 id="food-heading">Skolmat som smakar framtidstro</h1>
      <p>
        Våra kockar lagar näringsrika måltider med mycket grönt, lokala råvaror och kryddor från skolans egna odlingar. Här
        hittar du veckans meny och hur vi gör matsalen till en plats fylld av gemenskap.
      </p>
    </div>
  </section>

  <section class="section" aria-labelledby="menu-heading">
    <div class="container">
      <h2 class="section-heading" id="menu-heading">{currentWeekLabel}: veckans meny</h2>
      <p class="section-intro">
        Varje dag erbjuder vi ett lakto-ovo-alternativ, en vegansk rätt och ett färgsprakande salladsbord. Alla soppor serveras
        med nygräddat bröd från vårt skolbageri. Veckans faktaruta: {currentWeek.fact}
      </p>
      <p class="menu-week-status">
        {isActiveWeek
          ? `Just nu är det ${normalizedWeekday.toLowerCase()} och maten som serveras hittar du nedan.`
          : `Menyn gäller från ${formatDate.format(parseDate(currentWeek.startDate))}.`}
      </p>
      <div class="schedule-grid">
        {currentWeek.days.map((day) => {
          const isToday = isActiveWeek && day.day === normalizedWeekday;
          return (
            <article class={`schedule-card${isToday ? ' is-today' : ''}`} key={day.day}>
              <div class="schedule-card-header">
                <h3>{day.day}</h3>
                {isToday && <span class="chip chip--accent">Idag</span>}
              </div>
              <ul class="meal-list">
                {day.meals.map((meal) => (
                  <li key={meal}>{meal}</li>
                ))}
              </ul>
              <p class="meal-highlight">{day.highlight}</p>
            </article>
          );
        })}
      </div>
    </div>
  </section>

  <section class="section section-alt" aria-labelledby="upcoming-heading">
    <div class="container">
      <h2 class="section-heading" id="upcoming-heading">Alla kommande veckor</h2>
      <p class="section-intro">
        Här hittar du matsedeln för hela terminen. Vi markerar tydligt vilken vecka som gäller just nu så att du enkelt kan planera mellanmål, utflykter och favoritdagar.
      </p>
      <div class="menu-week-list" role="list">
        {sortedWeeks.map((week) => (
          <article
            class={`menu-week-card${isWeekCurrent(week) ? ' is-current' : ''}`}
            role="listitem"
            key={week.startDate}
          >
            <header class="menu-week-header">
              <div>
                <h3>Vecka {week.weekNumber}</h3>
                <p class="menu-week-dates">Start {formatDate.format(parseDate(week.startDate))}</p>
              </div>
              {isWeekCurrent(week) && (
                <span class="chip chip--accent">
                  {isActiveWeek ? 'Pågående vecka' : 'Nästa meny'}
                </span>
              )}
            </header>
            <p class="menu-week-fact">Faktaruta: {week.fact}</p>
            <div class="menu-week-days">
              {week.days.map((day) => {
                const isToday = isWeekCurrent(week) && isActiveWeek && day.day === normalizedWeekday;
                return (
                  <article
                    class={`menu-week-day${isToday ? ' is-today' : ''}`}
                    aria-current={isToday ? 'date' : undefined}
                    key={`${week.startDate}-${day.day}`}
                  >
                    <h4>{day.day}</h4>
                    <ul class="meal-list">
                      {day.meals.map((meal) => (
                        <li key={meal}>{meal}</li>
                      ))}
                    </ul>
                    <p class="meal-highlight">{day.highlight}</p>
                  </article>
                );
              })}
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>

  <section class="section" aria-labelledby="focus-heading">
    <div class="container">
      <h2 class="section-heading" id="focus-heading">Så skapar vi matglädje</h2>
      <p class="section-intro">
        Vi ser matsalen som skolans vardagsrum. Här finns plats för lugn, samtal och inspiration – alltid med hållbarhet och
        elevinflytande i centrum.
      </p>
      <div class="info-grid">
        {infoCards.map((card) => (
          <article class="info-card" key={card.title}>
            <h3>{card.title}</h3>
            <p>{card.description}</p>
          </article>
        ))}
      </div>
      <div class="fun-grid">
        {sustainabilityHighlights.map((item) => (
          <article class="fun-card" key={item.title}>
            <strong>{item.title}</strong>
            <p>{item.description}</p>
          </article>
        ))}
      </div>
      <div class="quote-card">
        <p>“{kitchenQuote.text}”</p>
        <cite>{kitchenQuote.author}</cite>
      </div>
    </div>
  </section>
</BaseLayout>
